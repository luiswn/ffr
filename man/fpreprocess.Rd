% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fpreprocess.R
\name{fpreprocess}
\alias{fpreprocess}
\title{Natural spline preprocessing of functional data}
\usage{
fpreprocess(data, grid_length)
}
\arguments{
\item{data}{A numeric matrix or a list of numeric matrices. For matrices, rows represent observations
and columns represent points on the functional grid. Scalar variables (single-column matrices)
are preserved unchanged.}

\item{grid_length}{An integer specifying the desired working grid length for the functional data.}
}
\value{
If \code{data} is a matrix, returns a matrix with the same number of rows and \code{grid_length} columns.
If \code{data} is a list, returns a list with the same structure, where each functional matrix has been
resampled to have \code{grid_length} columns. Column names of the output matrices represent the new grid points.
}
\description{
Transforms discrete point observations of functional data into functional data evaluated on a dense equidistant working grid.
The function uses a direct interpolation approach, using natural splines to interpolate missing values
}
\details{
This function transforms discretely observed functional data objects to densely evaluated variables.
For each observation (row):

\enumerate{
\item A natural spline is fitted to the original data points
\item The fitted spline is evaluated at the new grid points
\item Missing values (NA) in the original data are handled appropriately
}

The function preserves scalar variables (single-column matrices) without modification and
maintains the structure of the input (matrix or list).
}
\examples{
\dontrun{
# Create example data
X1 <- matrix(rnorm(100 * 50), nrow = 100, ncol = 50) # 100 observations, 50 grid points
X2 <- matrix(rnorm(100 * 30), nrow = 100, ncol = 30) # 100 observations, 30 grid points
scalar_var <- matrix(rnorm(100), nrow = 100, ncol = 1) # scalar variable

# Process a single matrix
X1_processed <- fpreprocess(X1, grid_length = 100)

# Process a list of matrices
data_list <- list(X1 = X1, X2 = X2, scalar = scalar_var)
processed_data <- fpreprocess(data_list, grid_length = 100)
}

}
